node里的一些名词

回调函数(异步)：
-解决异步编辑的问题，将后续的逻辑当作参数传递给另一个函数，当函数执行后调用传递的函数


前端异步的有：定时器、事件绑定、ajax callback

单线程（node）和多线程(java)：
    单线程： 同一时刻只能干一件事
    多线程：切换时间片段，切换速度很快，感觉像在干多件事，如果主线程，干的业务过重，
    此时会阻塞主线程，node可以开多个进程（进程包含线程，一个进程里只能有一个线程）

同步异步：
    异步不会阻塞主线程（在编程观念上，异步约等于多线程）

阻塞非阻塞：
针对的是内核来说的，阻塞肯定不是异步


io操作:
输入与输出
input output 文件读写操作

事件环：
    事件一环扣一环，可以默认为是有两个小本，一个叫当前的事件队列（同步），另外一个是异步队列（异步代码）

node
在node中不具备DOM  BOM
-node 只识别js
-chrome v8引擎  快   不需要考虑兼容性
-可以操作文件，操作系统及的api
-而且支持模块化（node天生自带模块化的功能）
-单线程的
-社区活跃 cnodejs.org


node的使用：
-node做中间层，去访问其他的后台语言eg:java
-node可以自己做后台


node的全局对象global
在文件中不声明，直接使用的我们可以叫他全局变量

导出： 三种方法
let Sum=(...args)=>{
    return args.reduce((prev,next)=>(prev+next))
}
//exports.sum=Sum;
//module.exports=Sum;
global.sum=Sum;

导入：对应的三种方法
let r=require('./sum.js')
//console.log(r.sum(1,2,3,4,5))
//console.log(r(1,2,3,4,5))
console.log(sum(1,2,3,4,5))


第三方模块：
必须下载

全局第三方模块（在命令行下载）
toubao源  cnpm源
mac 用户全局安装需要加sudo
-g 是全局安装

npm install nrm -g
nrm ls 查看所有源
nrm use taobao 使用taobao源
nrm test 测网速


本地第三方模块（在项目中使用）
-初始化package.json（记录安装的依赖有哪些）

-开发上线依赖（在开发和上线时使用）
npm install jquery


-开发依赖（只在开发时使用）
npm install less --save-dev


如果node-module删除了，但是package.json的依赖有,那就直接npm install

删除依赖：
    怎么安的就怎么删除
    npm uninstall jquery
    npm uninstall less --save-dev

npm root -g 查看全局位置
npm config list 查看配置列表

yarn 安装
npm install yarn -g
yarn add 项目名


初始化:yarn init
yarn不能安装全局的
yarn add jquery (项目依赖)
yarn add less --dev (开发依赖)




用localhost跑项目
npm install http-server -g

用法：
    进入到项目中
    http-server 文件名字



在npm上发布我们自己的包
包由多个模块组成
-指定一个入口文件 告诉从哪里开始运行
-需要有package.json文件
-README.MD写上包的作用
-入口文件的名字要等于package.json=>main文件
-进入到需要发布的文件夹内
-切换到国外源，确认源必须是npm（nrm ls      nrm use npm）
-注册或者登陆用户npm addUser
-发布npm publish


删除发布：
    npm unpublish --force

重新发布：
     要改一下package.json的版本
     再npm publish

使用第三方模块安装即可，可以通过模块名引入包


内置，核心模块

-util (继承)